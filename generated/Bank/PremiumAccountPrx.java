// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Bank.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Bank;

public interface PremiumAccountPrx extends AccountPrx
{
    public void calculateLoan(int amount, currency curr, int period, Ice.IntHolder totalCost, Ice.FloatHolder interestRate)
        throws IncorrectData;

    public void calculateLoan(int amount, currency curr, int period, Ice.IntHolder totalCost, Ice.FloatHolder interestRate, java.util.Map<String, String> __ctx)
        throws IncorrectData;

    public Ice.AsyncResult begin_calculateLoan(int amount, currency curr, int period);

    public Ice.AsyncResult begin_calculateLoan(int amount, currency curr, int period, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_calculateLoan(int amount, currency curr, int period, Ice.Callback __cb);

    public Ice.AsyncResult begin_calculateLoan(int amount, currency curr, int period, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_calculateLoan(int amount, currency curr, int period, Callback_PremiumAccount_calculateLoan __cb);

    public Ice.AsyncResult begin_calculateLoan(int amount, currency curr, int period, java.util.Map<String, String> __ctx, Callback_PremiumAccount_calculateLoan __cb);

    public void end_calculateLoan(Ice.IntHolder totalCost, Ice.FloatHolder interestRate, Ice.AsyncResult __result)
        throws IncorrectData;
}
